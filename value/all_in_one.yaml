    pod:
      spec: {}

file-manager:
    enabled: true
    grpc: true
    replicas: 1
    image:
      name: public.ecr.aws/megazone/spaceone/file-manager
      version: 1.11.0

    volumeMounts:
        application: []
        application_worker: []
        application_scheduler: []
        application_rest: []

    pod:
        spec: {}

dashboard:
    enabled: true
    grpc: true
    scheduler: false
    worker: false
    replicas: 1
    image:
      name: public.ecr.aws/megazone/spaceone/dashboard
      version: 1.11.0

console-api-v2:
    enabled: true
    scheduler: false
    worker: false
    rest: true
    replicas: 1
    image:
      name: public.ecr.aws/megazone/spaceone/console-api-v2
      version: 1.11.0

    service:
      rest:
        type: ClusterIP
        annotations:
          nil: nil
        ports:
          - name: http
            port: 80
            targetPort: 80
            protocol: TCP
          - name: https
            port: 443
            targetPort: 80
            nodePort: null
            protocol: TCP

    ingress:
      rest:
        enabled: true
        annotations:
          alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
          alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
          alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0 # replace or leave out
          alb.ingress.kubernetes.io/scheme: "internet-facing" # internet-facing
          alb.ingress.kubernetes.io/target-type: instance # Your console-api-v2 should be NodePort for this configuration.
          alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:111111111111:certificate/11111111-1111-111111111-111111111111
          alb.ingress.kubernetes.io/healthcheck-path: "/check"
          alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60 # default 60
          external-dns.alpha.kubernetes.io/hostname: "*.example.com"
        servicePort: 80
        path: /

marketplace-assets:
    enabled: false

# include config/alb.yaml (for ALB)
# include config/nlb.yaml (for NLB)
supervisor:
    enabled: true
    image:
      name: spaceone/supervisor
      version: 1.11.0
    application: {}
    application_scheduler:
        NAME: root
        HOSTNAME: root-supervisor.svc.cluster.local
        BACKEND: KubernetesConnector
        CONNECTORS:
            RepositoryConnector:
                endpoint:
                    v1: grpc://repository.spaceone.svc.cluster.local:50051
            PluginConnector:
                endpoint:
                    v1: grpc://plugin.spaceone.svc.cluster.local:50051
            KubernetesConnector:
                namespace: root-supervisor
                start_port: 50051
                end_port: 50052
                headless: true
                replica:
                    inventory.Collector: 1
                    inventory.Collector?aws-ec2: 1
                    inventory.Collector?aws-cloud-services: 1
                    inventory.Collector?aws-power-state: 1
                    monitoring.DataSource: 1

#        TOKEN: ___CHANGE_YOUR_ROOT_TOKEN___ 
        TOKEN_INFO:
            protocol: consul
            config:
                host: spaceone-consul-server.spaceone.svc.cluster.local
            uri: root/api_key/TOKEN

    pod:
        spec: {}

ingress:
    enabled: false

spaceone-initializer:
  enabled: true
  image:
      name: spaceone/spacectl
      version: 1.11.0.5
  main:
    import:
      - /root/spacectl/apply/root_domain.yaml
      - /root/spacectl/apply/marketplace.yaml
      - /root/spacectl/apply/user_domain.yaml
      - /root/spacectl/apply/role.yaml
      - /root/spacectl/apply/statistics.yaml
    var:
      domain:
        root: root
        user: spaceone
      default_language: en
      default_timezone: UTC
#      default_language: ko
#      default_timezone: Asia/Seoul
      domain_owner:
        id: admin
        password: Admin123!@#
      user:
        id: root_api_key
      consul_server: spaceone-consul-server
      marketplace_endpoint: grpc://repository.portal.spaceone.dev:50051
      project_manager_policy_id: policy-managed-project-manager
      project_viewer_policy_id: policy-managed-project-viewer
      domain_admin_policy_id: policy-managed-domain-admin
      domain_viewer_policy_id: policy-managed-domain-viewer
    tasks: []

#######################################
# TYPE 1. global variable (for docdb) 
#######################################
global:
    namespace: spaceone
    supervisor_namespace: root-supervisor
    backend:
        sidecar: []
        volumes: []
    frontend:
        sidecar: []
        volumes: []

    shared_conf:
        HANDLERS:
            authentication:
            - backend: spaceone.core.handler.authentication_handler.AuthenticationGRPCHandler
              uri: grpc://identity:50051/v1/Domain/get_public_key
            authorization:
            - backend: spaceone.core.handler.authorization_handler.AuthorizationGRPCHandler
              uri: grpc://identity:50051/v1/Authorization/verify
            mutation:
            - backend: spaceone.core.handler.mutation_handler.SpaceONEMutationHandler
        CONNECTORS:
            IdentityConnector:
                endpoint:
                    v1: grpc://identity:50051
            SecretConnector:
                endpoint:
                    v1: grpc://secret:50051
            RepositoryConnector:
                endpoint:
                    v1: grpc://repository:50051
            PluginConnector:
                endpoint:
                    v1: grpc://plugin:50051
            ConfigConnector:
                endpoint:
                    v1: grpc://config:50051
            InventoryConnector:
                endpoint:
                    v1: grpc://inventory:50051
            MonitoringConnector:
                endpoint:
                    v1: grpc://monitoring:50051
            StatisticsConnector:
                endpoint:
                    v1: grpc://statistics:50051
            BillingConnector:
                endpoint:
                    v1: grpc://billing:50051
            NotificationConnector:
                endpoint:
                    v1: grpc://notification:50051
            PowerSchedulerConnector:
                endpoint:
                    v1: grpc://power-scheduler:50051
        CACHES:
            default:
                backend: spaceone.core.cache.redis_cache.RedisCache
                host: redis
                port: 6379
                db: 0
                encoding: utf-8
                socket_timeout: 10
                socket_connect_timeout: 10
#######################################
# TYPE 2. global variable (for mongodb cluster)
#######################################
#global:
#    namespace: spaceone
#    supervisor_namespace: root-supervisor
#    backend:
#        sidecar:
#            - name: mongos
#              image: mongo:4.4.0-bionic
#              command: [ 'mongos', '--config', '/mnt/mongos.yml', '--bind_ip_all' ]
#              volumeMounts:
#                - name: mongos-conf
#                  mountPath: /mnt/mongos.yml
#                  subPath: mongos.yml
#                  readOnly: true
#                - name: mongo-shard-key
#                  mountPath: /opt/mongos/mongo-shard.pem
#                  subPath: mongo-shard.pem
#                  readOnly: true
#        volumes:
#            - name: mongo-shard-key
#              secret:
#                  defaultMode: 0400
#                  secretName: mongo-shard-key
#            - name: mongos-conf
#              configMap:
#                  name: mongos-conf
